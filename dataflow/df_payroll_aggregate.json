{
	"name": "df_payroll_aggregate",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_azure_sql_nycpayroll2021",
						"type": "DatasetReference"
					},
					"name": "sourcepayroll2021"
				},
				{
					"dataset": {
						"referenceName": "ds_adls_nycpayroll_hist",
						"type": "DatasetReference"
					},
					"name": "sourcepayrollhist"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_synapse_payroll_summary",
						"type": "DatasetReference"
					},
					"name": "sinksynpasepayrollsummary"
				}
			],
			"transformations": [
				{
					"name": "union1"
				},
				{
					"name": "casttomatch"
				},
				{
					"name": "filter1"
				},
				{
					"name": "TotalPaid"
				},
				{
					"name": "aggregate1"
				}
			],
			"scriptLines": [
				"parameters{",
				"     dataflow_param_fiscalyear as integer (2000)",
				"}",
				"source(output(",
				"          FiscalYear as integer,",
				"          PayrollNumber as integer,",
				"          AgencyID as string,",
				"          AgencyName as string,",
				"          EmployeeID as string,",
				"          LastName as string,",
				"          FirstName as string,",
				"          AgencyStartDate as date,",
				"          WorkLocationBorough as string,",
				"          TitleCode as string,",
				"          TitleDescription as string,",
				"          LeaveStatusasofJune30 as string,",
				"          BaseSalary as double,",
				"          PayBasis as string,",
				"          RegularHours as double,",
				"          RegularGrossPaid as double,",
				"          OTHours as double,",
				"          TotalOTPaid as double,",
				"          TotalOtherPay as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> sourcepayroll2021",
				"source(output(",
				"          FiscalYear as string,",
				"          PayrollNumber as string,",
				"          AgencyID as string,",
				"          AgencyName as string,",
				"          EmployeeID as string,",
				"          LastName as string,",
				"          FirstName as string,",
				"          AgencyStartDate as string,",
				"          WorkLocationBorough as string,",
				"          TitleCode as string,",
				"          TitleDescription as string,",
				"          LeaveStatusasofJune30 as string,",
				"          BaseSalary as string,",
				"          PayBasis as string,",
				"          RegularHours as string,",
				"          RegularGrossPaid as string,",
				"          OTHours as string,",
				"          TotalOTPaid as string,",
				"          TotalOtherPay as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> sourcepayrollhist",
				"sourcepayroll2021, casttomatch union(byName: false)~> union1",
				"sourcepayrollhist derive(FiscalYear = toInteger(FiscalYear),",
				"          PayrollNumber = toInteger(PayrollNumber),",
				"          AgencyStartDate = toDate(AgencyStartDate),",
				"          BaseSalary = toFloat(BaseSalary),",
				"          RegularHours = toFloat(RegularHours),",
				"          RegularGrossPaid = toFloat(RegularGrossPaid),",
				"          OTHours = toFloat(OTHours),",
				"          TotalOTPaid = toFloat(TotalOTPaid),",
				"          TotalOtherPay = toFloat(TotalOtherPay)) ~> casttomatch",
				"union1 filter(toInteger(FiscalYear) >= $dataflow_param_fiscalyear) ~> filter1",
				"filter1 derive(TotalPaid = RegularGrossPaid + TotalOTPaid+TotalOtherPay) ~> TotalPaid",
				"TotalPaid aggregate(groupBy(FiscalYear,",
				"          AgencyName),",
				"     TotalPaid = sum(TotalPaid)) ~> aggregate1",
				"aggregate1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          FiscalYear as integer,",
				"          AgencyName as string,",
				"          TotalPaid as double",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     truncate:true,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          FiscalYear,",
				"          AgencyName,",
				"          TotalPaid",
				"     )) ~> sinksynpasepayrollsummary"
			]
		}
	}
}